out_dir: results
metric_best: accuracy
wandb:
  use: True
  project: CIFAR10
dataset:
  format: PyG-GNNBenchmarkDataset_LG
  name: CIFAR10
  task: graph
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: LinearNode
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: LinearEdge
  edge_encoder_bn: False
# prep:
#   exp: True
#   exp_algorithm: 'Random-d'
#   exp_deg: 5 # Algorithm will use 5 permutations or 5 Hamiltonian cycles, so actual degree will be 10
#   add_edge_index: True # Set True if you want to add real edges beside expander edges
#   num_virt_node: 1 # Set True if you want to add global node connections beside expander edges
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: gnn
  loss_fun: cross_entropy
  edge_decoding: dot
  graph_pooling: mean
gnn:
  head: default
  layers_pre_mp: 0
  layers_mp: 8
  layers_post_mp: 2
  dim_inner: 66  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: False
  act: relu
  dropout: 0.1
  agg: mean
  normalize_adj: False
  linegraph: True
  lgvariant: 12
optim:
  clip_grad_norm: True
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.001
  max_epoch: 150
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5